/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ouvidoria;

import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.text.Normalizer;
import javax.swing.ListSelectionModel;
import ouvidoria.util.UtilTexto;

/**
 *
 * @author ROBSMAC
 */
public class cd_baixa_os_cadastro_editar_n3_complemento extends javax.swing.JDialog {

    List<Integer> liChave_acomp_status = new ArrayList<>();
    List<Integer> liChave_acomp_acao = new ArrayList<>();

    JTable tbl_acao_acomp_real;

    UtilTexto utilTexto = new UtilTexto();

    int iID_CodBaixa = 0;

    /**
     * Creates new form cd_baixa_os_cadastro_editar_n3
     */
    public cd_baixa_os_cadastro_editar_n3_complemento(String sNome) {
        initComponents();

        //backup dos campos
        //id
        //nome
        //quebra
        //tipo
        //piEdicao = iEdicao;
        this.setTitle("(N3) Opções de Baixa de OS");

        /*
         if (iEdicao == 0) {
         jtxt_cod_baixa_os.setEditable(true);
         jcb_tipo_cop.setEnabled(true);
         jcb_tipo_cop.setSelectedIndex(-1);
         this.setTitle(this.getTitle() + "Inclusão");
         jbt_salvar.setText("Incluir");
         } else {
         if (piEdicao == 1) {
         jtxt_cod_baixa_os.setEditable(true);
         jcb_tipo_cop.setEnabled(true);
         this.setTitle(this.getTitle() + "Alteração");
         jbt_salvar.setText("Alterar");
         } else {
         jtxt_cod_baixa_os.setEditable(false);
         jcb_tipo_cop.setEnabled(false);
         this.setTitle(this.getTitle() + "Exclusão");
         jbt_salvar.setText("Excluir");
         }
         }
         */
        liChave_acomp_status = global.fill_combo_key(jcb_acomp_status,
                "select id, nome "
                + "from ouvidoria.tb_acao_acomp_status "
                + "where trim(upper(nome)) = trim(upper('" + sNome + "')) "
                + "order by nome ",
                true,
                1,
                2
        );
        jcb_acomp_status.removeItemAt(0); //eliminando a opcao "vazia"

        if (jcb_acomp_status.getModel().getSize() == 0) {
            global.show_error_message("Não foi possível prosseguir pois a Opção de Baixa foi removida.\n\nVerifique a lista de opções");
            this.dispose();
        } else {
            if (jcb_acomp_status.getModel().getSize() == 1) {
                jcb_acomp_status.setEnabled(false);
            }
            global.open_modal(this, this.getTitle());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbt_ativar = new javax.swing.JButton();
        jbt_desativar = new javax.swing.JButton();
        jpnl_acoes_acomp = new javax.swing.JPanel();
        jcb_acomp_status = new javax.swing.JComboBox();
        jbt_renomear = new javax.swing.JButton();
        jbt_incluir = new javax.swing.JButton();
        jbt_excluir = new javax.swing.JButton();
        jbt_salvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Status Acomp (Código de baixa)");

        jLabel2.setText("Ações Acomp para o Status Acomp selecionado");

        jbt_ativar.setText("Ativar");
        jbt_ativar.setEnabled(false);
        jbt_ativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_ativarActionPerformed(evt);
            }
        });

        jbt_desativar.setText("Desativar");
        jbt_desativar.setEnabled(false);
        jbt_desativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_desativarActionPerformed(evt);
            }
        });

        jpnl_acoes_acomp.setBackground(new java.awt.Color(204, 204, 255));
        jpnl_acoes_acomp.setMinimumSize(new java.awt.Dimension(687, 181));

        javax.swing.GroupLayout jpnl_acoes_acompLayout = new javax.swing.GroupLayout(jpnl_acoes_acomp);
        jpnl_acoes_acomp.setLayout(jpnl_acoes_acompLayout);
        jpnl_acoes_acompLayout.setHorizontalGroup(
            jpnl_acoes_acompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 687, Short.MAX_VALUE)
        );
        jpnl_acoes_acompLayout.setVerticalGroup(
            jpnl_acoes_acompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 181, Short.MAX_VALUE)
        );

        jcb_acomp_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_acomp_status.setToolTipText("Esse é o código de baixa no N3");
        jcb_acomp_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_acomp_statusActionPerformed(evt);
            }
        });

        jbt_renomear.setText("Renomear");
        jbt_renomear.setEnabled(false);
        jbt_renomear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_renomearActionPerformed(evt);
            }
        });

        jbt_incluir.setText("Incluir");
        jbt_incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_incluirActionPerformed(evt);
            }
        });

        jbt_excluir.setText("Excluir");
        jbt_excluir.setEnabled(false);
        jbt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_excluirActionPerformed(evt);
            }
        });

        jbt_salvar.setText("Salvar");
        jbt_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_salvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcb_acomp_status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnl_acoes_acomp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbt_ativar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbt_desativar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbt_renomear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbt_incluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbt_excluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbt_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcb_acomp_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpnl_acoes_acomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbt_ativar)
                            .addComponent(jbt_desativar)
                            .addComponent(jbt_renomear)
                            .addComponent(jbt_incluir)
                            .addComponent(jbt_excluir))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbt_salvar)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_ativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_ativarActionPerformed
        // TODO add your handling code here:
        fl_ativar_desativar(1);
    }//GEN-LAST:event_jbt_ativarActionPerformed

    private void fl_ativar_desativar(int iAcao) {
        int[] selected_rows = tbl_acao_acomp_real.getSelectedRows();

        if (selected_rows.length == 0) {
            return;
        }
        if (iAcao == 1) {
            tbl_acao_acomp_real.getModel().setValueAt("Sim", selected_rows[0], 3);
        } else {
            tbl_acao_acomp_real.getModel().setValueAt("Não", selected_rows[0], 3);
        }

        tbl_acao_acomp_real.getModel().setValueAt("Atualizar", selected_rows[0], 4);
        tbl_acao_acomp_real.requestFocus();
        AtualizaOpcoes();
    }

    private void jcb_acomp_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_acomp_statusActionPerformed

        try {
            jpnl_acoes_acomp.removeAll();
            if (jcb_acomp_status.getSelectedIndex() > 0) {
                iID_CodBaixa = liChave_acomp_status.get(jcb_acomp_status.getSelectedIndex() - 1);
                String query_os = "select id, id_acomp_status, nome as Baixa, case when fl_ativo = 1 then 'Sim' else 'Não' end Ativo, 'Nenhuma' as Acao "
                        + "from ouvidoria.tb_acao_acomp_acao "
                        + "where id_acomp_status = " + iID_CodBaixa + " "
                        + "order by nome ";

                JTable tbl_tab_temp = global.getTable(query_os, jpnl_acoes_acomp);
                int invisible_ids[] = {0, 1};
                int column_widths[] = {50, 50, 200, 100, 100};

                global.hide_columns(invisible_ids, tbl_tab_temp);
                global.adjust_columns(column_widths, tbl_tab_temp);

                tbl_acao_acomp_real = tbl_tab_temp;
                tbl_acao_acomp_real.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                tbl_acao_acomp_real.setDefaultEditor(Object.class, null); //bloqueando edicao de celulas
                AtualizaOpcoes();

                tbl_acao_acomp_real.addKeyListener(new java.awt.event.KeyAdapter() {
                    //public void keyPressed(java.awt.event.KeyEvent evt) {
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        AtualizaOpcoes();
                    }
                });

                tbl_acao_acomp_real.addMouseListener(new java.awt.event.MouseAdapter() {
                    //public void mouseClicked(java.awt.event.MouseAdapter evt) {
                    public void mouseClicked(MouseEvent e) {
                        AtualizaOpcoes();
                    }
                });

            }
        } catch (Exception e) {
            global.show_error_message(e.getMessage());
        }
        //global.adjust_columns(column_widths, tab_os);

    }//GEN-LAST:event_jcb_acomp_statusActionPerformed

    private void Botoes_Estado0() {
        jbt_ativar.setEnabled(false);
        jbt_desativar.setEnabled(false);
        jbt_renomear.setEnabled(false);
        jbt_excluir.setEnabled(false);
    }

    private void AtualizaOpcoes() {
        if (tbl_acao_acomp_real.getModel().getRowCount() == 0) {
            Botoes_Estado0();
            return;
        }
        if (tbl_acao_acomp_real.getSelectedRow() == -1) {
            Botoes_Estado0();
            return;
        }

        jbt_renomear.setEnabled(true);

        if ("0".equals(tbl_acao_acomp_real.getModel().getValueAt(tbl_acao_acomp_real.getSelectedRow(), 0).toString())) {
            jbt_ativar.setEnabled(false);
            jbt_desativar.setEnabled(false);
            jbt_excluir.setEnabled(true);
        } else {
            jbt_excluir.setEnabled(false);
            if ("Sim".equals(tbl_acao_acomp_real.getModel().getValueAt(tbl_acao_acomp_real.getSelectedRow(), 3).toString())) {
                jbt_ativar.setEnabled(false);
                jbt_desativar.setEnabled(true);
            } else {
                jbt_ativar.setEnabled(true);
                jbt_desativar.setEnabled(false);
            }
        }

    }

    private void jbt_desativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_desativarActionPerformed
        // TODO add your handling code here:
        fl_ativar_desativar(0);
    }//GEN-LAST:event_jbt_desativarActionPerformed

    private void jbt_renomearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_renomearActionPerformed
        // TODO add your handling code here:
        int[] selected_rows = tbl_acao_acomp_real.getSelectedRows();

        if (selected_rows.length == 0) {
            return;
        }

        String sNome_Atual = tbl_acao_acomp_real.getModel().getValueAt(selected_rows[0], 2).toString();
        String sNome_Novo = global.show_input_text("Informe o novo nome", sNome_Atual);

        if (sNome_Novo == null) {
            return;
        }

        sNome_Novo = sNome_Novo.trim();
        if (sNome_Novo.length() > 100) {
            sNome_Novo = sNome_Novo.substring(0, 100).trim();
        }

        if (sNome_Atual.equals(sNome_Novo)) {
            return;
        }

        //verificando se há outra linha com o mesmo nome
        if (utilTexto.LocalizaNome_EmTabela(tbl_acao_acomp_real, 2, sNome_Novo, false, false)) {
            global.show_warning_message("'Ação Acomp' já existe");
            return;
        }

        tbl_acao_acomp_real.getModel().setValueAt(sNome_Novo, selected_rows[0], 2);
        if (!"0".equals(tbl_acao_acomp_real.getModel().getValueAt(tbl_acao_acomp_real.getSelectedRow(), 0).toString())) {
            tbl_acao_acomp_real.getModel().setValueAt("Atualizar", selected_rows[0], 4);
        }

        tbl_acao_acomp_real.requestFocus();
        AtualizaOpcoes();
    }//GEN-LAST:event_jbt_renomearActionPerformed

    private void jbt_incluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_incluirActionPerformed
        // TODO add your handling code here:

        String sNome_Atual = "";
        String sNome_Novo = global.show_input_text("Informe a nova 'Ação Acomp'", sNome_Atual);

        if (sNome_Novo == null) {
            return;
        }

        sNome_Novo = sNome_Novo.trim();
        if (sNome_Novo.length() > 100) {
            sNome_Novo = sNome_Novo.substring(0, 100).trim();
        }

        if (sNome_Atual.equals(sNome_Novo)) {
            return;
        }

        //verificando se há outra linha com o mesmo nome
        if (utilTexto.LocalizaNome_EmTabela(tbl_acao_acomp_real, 2, sNome_Novo, false, false)) {
            global.show_warning_message("'Ação Acomp' já existe");
            return;
        }

        //DefaultTableModel model = new DefaultTableModel();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tbl_acao_acomp_real.getModel();
        model.addRow(new Object[]{0, 0, sNome_Novo, "Sim", "Incluir"});
        tbl_acao_acomp_real.setModel((TableModel) model);

        tbl_acao_acomp_real.requestFocus();
        AtualizaOpcoes();

    }//GEN-LAST:event_jbt_incluirActionPerformed

    private void jbt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_excluirActionPerformed
        // TODO add your handling code here:

        int[] selected_rows = tbl_acao_acomp_real.getSelectedRows();

        if (selected_rows.length == 0) {
            return;
        }

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tbl_acao_acomp_real.getModel();
        model.removeRow(selected_rows[0]);
        tbl_acao_acomp_real.setModel((TableModel) model);

        tbl_acao_acomp_real.requestFocus();
        AtualizaOpcoes();
    }//GEN-LAST:event_jbt_excluirActionPerformed

    private void jbt_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_salvarActionPerformed
        // TODO add your handling code here:
        StringBuilder sSQL = new StringBuilder();
        int iQtdGravar = 0;
        String psEdicao = "";
        int iID = 0;
        String sNome = "";
        int iFl_Ativo = 0;

        if (tbl_acao_acomp_real.getRowCount() > 0) {
            for (int i = 0; i < tbl_acao_acomp_real.getRowCount(); i++) {
                if (!"Nenhuma".equals(tbl_acao_acomp_real.getModel().getValueAt(i, 4).toString())) {
                    iQtdGravar++;
                }
            }
        }

        if (iQtdGravar == 0) {
            global.show_message("Nada a gravar.\n\nPara abandonar a operação, basta fechar a janela");
            return;
        }

        //atualizações - inicio
        try {
            Cursor hourglassCursor = new Cursor(Cursor.WAIT_CURSOR);
            setCursor(hourglassCursor);
            Connection conn = Db_class.mysql_conn();

            for (int i = 0; i < tbl_acao_acomp_real.getRowCount(); i++) {
                psEdicao = tbl_acao_acomp_real.getModel().getValueAt(i, 4).toString();
                iID = Integer.parseInt(tbl_acao_acomp_real.getModel().getValueAt(i, 0).toString());
                sNome = tbl_acao_acomp_real.getModel().getValueAt(i, 2).toString();
                iFl_Ativo = tbl_acao_acomp_real.getModel().getValueAt(i, 3).toString() == "Sim" ? 1 : 0;

                if (!"Nenhuma".equals(psEdicao)) {
                    sSQL.delete(0, sSQL.length());
                    if ("Incluir".equals(psEdicao)) {
                        sSQL.append("insert into ouvidoria.tb_acao_acomp_acao ");
                        sSQL.append("(id_acomp_status, nome) ");
                        sSQL.append("select ");
                        sSQL.append(iID_CodBaixa).append(", ");
                        sSQL.append("'").append(sNome).append("' as nome ");
                        sSQL.append("from dual ");
                        sSQL.append("where not exists ");
                        sSQL.append("( ");
                        sSQL.append("select nome ");
                        sSQL.append("from ouvidoria.tb_acao_acomp_acao ");
                        sSQL.append("where trim(upper(nome)) = trim(upper('").append(sNome).append("')) ");
                        sSQL.append(") ");
                        sSQL.append("; ");
                    } else {
                        sSQL.append("update ouvidoria.tb_acao_acomp_acao ");
                        sSQL.append("set ");
                        sSQL.append("nome = '").append(sNome).append("', ");
                        sSQL.append("fl_ativo = ").append(iFl_Ativo).append(" ");
                        sSQL.append("where id = ").append(iID).append("; ");
                    }
                    PreparedStatement pStmt = conn.prepareStatement(sSQL.toString(), Statement.RETURN_GENERATED_KEYS);
                    int iLinhasAfetadas = pStmt.executeUpdate();
                }
            }
            Db_class.close_conn(conn);

            Cursor normalCursor = new Cursor(Cursor.DEFAULT_CURSOR);
            setCursor(normalCursor);
        } catch (Exception ex) {
            Cursor normalCursor = new Cursor(Cursor.DEFAULT_CURSOR);
            setCursor(normalCursor);
            global.show_error_message("Problemas para gravar as informações\n\nErro: " + ex.getMessage());
        }

        this.dispose();
        //atualizações - final

    }//GEN-LAST:event_jbt_salvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cd_baixa_os_cadastro_editar_n3_complemento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cd_baixa_os_cadastro_editar_n3_complemento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cd_baixa_os_cadastro_editar_n3_complemento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cd_baixa_os_cadastro_editar_n3_complemento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        final String sNome = args[0];

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cd_baixa_os_cadastro_editar_n3_complemento(sNome).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbt_ativar;
    private javax.swing.JButton jbt_desativar;
    private javax.swing.JButton jbt_excluir;
    private javax.swing.JButton jbt_incluir;
    private javax.swing.JButton jbt_renomear;
    private javax.swing.JButton jbt_salvar;
    private javax.swing.JComboBox jcb_acomp_status;
    private javax.swing.JPanel jpnl_acoes_acomp;
    // End of variables declaration//GEN-END:variables
}
