/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ouvidoria;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.coderazzi.filters.gui.AutoChoices;
import net.coderazzi.filters.gui.TableFilterHeader;

/**
 *
 * @author ROBSMAC
 */
public class dth_mr_editar extends javax.swing.JDialog {

    JTable main_tab;
    int piEdicao = 0;

    public dth_mr_editar() {
        initComponents();
    }

    /**
     * Creates new form dth_mr_editar
     *
     * @param iEdicao
     * @param sCOP
     * @param sTipo
     * @param sSistema
     */
    public dth_mr_editar(Integer iEdicao, String sCOP, String sTipo, String sSistema) {
        initComponents();

        //nome da MR
        jtxt_mr_nova.setText(sCOP);
        //tipo da MR
        jcb_tipo_cop.setSelectedIndex(0);
        for (int i = 0; i < jcb_tipo_cop.getItemCount(); i++) {
            if (sTipo.trim().toUpperCase().equals(jcb_tipo_cop.getItemAt(i).toString().trim().toUpperCase())) {
                jcb_tipo_cop.setSelectedIndex(i);
                break;
            }
        }
        //sistema da MR
        if ("".equals(sSistema)) {
            jcb_sistema.setSelectedIndex(0);
        } else {
            for (int i = 0; i < jcb_sistema.getItemCount(); i++) {
                if (sSistema.trim().toUpperCase().equals(jcb_sistema.getItemAt(i).toString().trim().toUpperCase())) {
                    jcb_sistema.setSelectedIndex(i);
                    break;
                }
            }
            if (jcb_sistema.getSelectedIndex() == -1) {
                jcb_sistema.setSelectedIndex(3);
            }
        }

        piEdicao = iEdicao;

        if (iEdicao == 0) {
            jtxt_mr_nova.setEditable(true);

            jcb_tipo_cop.setEnabled(false); //não permitir alteração - travar em COP DTH
            for (int i = 0; i < jcb_tipo_cop.getItemCount(); i++) {
                if ("COP DTH".trim().toUpperCase().equals(jcb_tipo_cop.getItemAt(i).toString().trim().toUpperCase())) {
                    jcb_tipo_cop.setSelectedIndex(i);
                    break;
                }
            }

            jcb_sistema.setEnabled(true);
            jtxt_mr_nova.setToolTipText("Digite o nome da MR");
            this.setTitle(this.getTitle() + " (Inclusão)");
        } else {
            jtxt_mr_nova.setEditable(false);
            jcb_tipo_cop.setEnabled(false);
            jcb_sistema.setEnabled(false);
            jtxt_mr_nova.setToolTipText("Na alteração, o nome da MR não pode mudar");
            this.setTitle(this.getTitle() + " (Alteração)");
        }

        atualiza_painel();

        global.open_modal(this, "DTH - Edição de microrregião");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void atualiza_painel() {

        jpnl_planilha.removeAll();
        jpnl_planilha.repaint();
        jpnl_planilha.revalidate();

        String query = "select "
                + "id, area as area_atual, area as Area, 'Nenhuma' as Ação "
                + "from ouvidoria.areas_novo "
                + "where cidade = '" + jtxt_mr_nova.getText().trim() + "'" // + "xx' "
                + "order by area";
        try {

            JTable tab = global.getTable(query, jpnl_planilha);

            int invisible_ids[] = {0, 1};
            int column_widths[] = {0, 0, 1, 1};

            global.hide_columns(invisible_ids, tab);
            global.adjust_columns(column_widths, tab);

            main_tab = tab;

            TableFilterHeader filter = new TableFilterHeader(main_tab, AutoChoices.ENABLED);
            filter.setAdaptiveChoices(true);

            main_tab.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        } catch (Exception ex) {
            Logger.getLogger(div_turno.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxt_mr_nova = new javax.swing.JTextField();
        jpnl_planilha = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jbt_excluir = new javax.swing.JButton();
        jbt_inc_alt = new javax.swing.JButton();
        jtxt_area = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jbt_salvar = new javax.swing.JButton();
        jbt_renomear = new javax.swing.JButton();
        jbt_cancelar = new javax.swing.JButton();
        jbt_sem_acao = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcb_tipo_cop = new javax.swing.JComboBox();
        jcb_sistema = new javax.swing.JComboBox();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edição de MR");

        jLabel1.setText("O nome da MR, por convenção, começa por \"MR\"");

        jpnl_planilha.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jpnl_planilhaLayout = new javax.swing.GroupLayout(jpnl_planilha);
        jpnl_planilha.setLayout(jpnl_planilhaLayout);
        jpnl_planilhaLayout.setHorizontalGroup(
            jpnl_planilhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
        );
        jpnl_planilhaLayout.setVerticalGroup(
            jpnl_planilhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel2.setText("Áreas de despacho");

        jbt_excluir.setText("Excluir");
        jbt_excluir.setMaximumSize(new java.awt.Dimension(83, 23));
        jbt_excluir.setMinimumSize(new java.awt.Dimension(83, 23));
        jbt_excluir.setPreferredSize(new java.awt.Dimension(83, 23));
        jbt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_excluirActionPerformed(evt);
            }
        });

        jbt_inc_alt.setText("Incluir");
        jbt_inc_alt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_inc_altActionPerformed(evt);
            }
        });

        jtxt_area.setText("Informe o nome da área");
        jtxt_area.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxt_areaFocusGained(evt);
            }
        });

        jLabel3.setText("Digite a área nova ou renomeada");

        jbt_salvar.setText("Salvar");
        jbt_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_salvarActionPerformed(evt);
            }
        });

        jbt_renomear.setText("Renomear");
        jbt_renomear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_renomearActionPerformed(evt);
            }
        });

        jbt_cancelar.setText("Cancelar");
        jbt_cancelar.setMaximumSize(new java.awt.Dimension(81, 23));
        jbt_cancelar.setMinimumSize(new java.awt.Dimension(81, 23));
        jbt_cancelar.setPreferredSize(new java.awt.Dimension(81, 23));
        jbt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_cancelarActionPerformed(evt);
            }
        });

        jbt_sem_acao.setText("Sem ação");
        jbt_sem_acao.setToolTipText("Sem ação para a área escolhida");
        jbt_sem_acao.setMaximumSize(new java.awt.Dimension(83, 23));
        jbt_sem_acao.setMinimumSize(new java.awt.Dimension(83, 23));
        jbt_sem_acao.setPreferredSize(new java.awt.Dimension(83, 23));
        jbt_sem_acao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_sem_acaoActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo de cadastro");

        jLabel5.setText("Sistema");

        jcb_tipo_cop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "COP DTH", "COP NET" }));

        jcb_sistema.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "ACTIVIA", "FIELD", "Nenhum" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtxt_area, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxt_mr_nova, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbt_sem_acao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbt_renomear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(jpnl_planilha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(40, 40, 40))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4)))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcb_tipo_cop, 0, 92, Short.MAX_VALUE)
                                    .addComponent(jcb_sistema, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbt_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbt_salvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbt_inc_alt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jtxt_mr_nova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcb_tipo_cop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcb_sistema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jpnl_planilha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_renomear)
                    .addComponent(jbt_sem_acao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(jtxt_area, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_inc_alt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbt_salvar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_excluirActionPerformed
        if (!"incluir".equals(main_tab.getValueAt(main_tab.getSelectedRow(), 3).toString().toLowerCase())) {
            main_tab.setValueAt("Excluir", main_tab.getSelectedRow(), 3);
        } else {
            DefaultTableModel model;
            model = (DefaultTableModel) main_tab.getModel();
            model.removeRow(main_tab.getSelectedRow());
        }
    }//GEN-LAST:event_jbt_excluirActionPerformed

    private void jbt_inc_altActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_inc_altActionPerformed
        String sNovoNome = jtxt_area.getText().toUpperCase().trim();
        Boolean bAchouIgual = false;

        if ("renomear".equals(jbt_inc_alt.getText().toLowerCase().trim())) {
            //renomeando
            if (sNovoNome != main_tab.getValueAt(main_tab.getSelectedRow(), 2)) {
                for (int i = 0; i < main_tab.getRowCount(); i++) {
                    if (i != main_tab.getSelectedRow()) {
                        if (sNovoNome.equals(main_tab.getValueAt(i, 2).toString())) {
                            bAchouIgual = true;
                            break;
                        }
                    }
                }

                if (!bAchouIgual) {
                    if (!"incluir".equals(main_tab.getValueAt(main_tab.getSelectedRow(), 3).toString().toLowerCase())) {
                        main_tab.setValueAt("Renomear", main_tab.getSelectedRow(), 3);
                    }
                    main_tab.setValueAt(sNovoNome, main_tab.getSelectedRow(), 2);
                } else {
                    global.show_warning_message("O novo nome escolhido já existe");
                }

                jbt_cancelarActionPerformed(null);
            }
        } else {
            //incluindo
            for (int i = 0; i < main_tab.getRowCount(); i++) {
                if (sNovoNome.equals(main_tab.getValueAt(i, 2).toString())) {
                    bAchouIgual = true;
                    break;
                }
            }

            if (!bAchouIgual) {
                DefaultTableModel model;
                model = (DefaultTableModel) main_tab.getModel();
                Object[][] rowData = {{0, "", sNovoNome, "Incluir"}};
                model.addRow(rowData[0]);
            } else {
                global.show_warning_message("A área informada já existe");
            }
        }

    }//GEN-LAST:event_jbt_inc_altActionPerformed

    private void jbt_renomearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_renomearActionPerformed
        if (main_tab.getRowCount() > 0) {
            if (main_tab.getSelectedRow() >= 0) {

                main_tab.setEnabled(false);
                jbt_excluir.setEnabled(false);
                jbt_renomear.setEnabled(false);
                jbt_inc_alt.setText("Renomear");
                jbt_cancelar.setVisible(true);

                jtxt_area.setText(main_tab.getValueAt(main_tab.getSelectedRow(), 2).toString());
            }
        }
    }//GEN-LAST:event_jbt_renomearActionPerformed

    private void jbt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_cancelarActionPerformed
        main_tab.setEnabled(true);
        jbt_excluir.setEnabled(true);
        jbt_renomear.setEnabled(true);
        jbt_inc_alt.setText("Incluir");
        jbt_cancelar.setVisible(false);
    }//GEN-LAST:event_jbt_cancelarActionPerformed

    private void jbt_sem_acaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_sem_acaoActionPerformed
        main_tab.setValueAt("Nenhuma", main_tab.getSelectedRow(), 3);
    }//GEN-LAST:event_jbt_sem_acaoActionPerformed

    private void jtxt_areaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxt_areaFocusGained
        // TODO add your handling code here:
        jtxt_area.setSelectionStart(0);
        jtxt_area.setSelectionEnd(jtxt_area.getText().length());
    }//GEN-LAST:event_jtxt_areaFocusGained

    private void jbt_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_salvarActionPerformed

        StringBuilder sSQL = new StringBuilder();
        StringBuilder sSQL_Log = new StringBuilder();
        StringBuilder sMsg = new StringBuilder();

        String s_mr;
        String s_tipo;
        String s_sistema;
        String s_resultado_area;

        String s_area_id;
        String s_area_atual;
        String s_area;
        String s_acao;

        jtxt_mr_nova.setText(jtxt_mr_nova.getText().trim().toUpperCase());

        if (jtxt_mr_nova.getText().length() == 0) {
            sMsg.append("Informe o nome da MR \n");
        }
        if (jcb_tipo_cop.getSelectedIndex() < 1) {
            sMsg.append("Informe o tipo da MR \n");
        }
        if (jcb_sistema.getSelectedIndex() < 1) {
            sMsg.append("Informe o sistema da MR \n");
        }
        if (main_tab == null) {
            sMsg.append("É necessário informar ao menos uma área de despacho \n");
        } else {
            //global.show_message(String.valueOf(main_tab.getRowCount()));
            if (main_tab.getRowCount() == 0) {
                sMsg.append("É necessário informar ao menos uma área de despacho \n");
            }
        }
        if (sMsg.length() != 0) {
            global.show_error_message("Faltam informações. Veja abaixo: \n\n" + sMsg.toString());
            return;
        }

        s_mr = jtxt_mr_nova.getText();
        s_tipo = jcb_tipo_cop.getSelectedItem().toString();
        s_sistema = jcb_sistema.getSelectedItem().toString();

        //atualizações - inicio
        try {
            Cursor hourglassCursor = new Cursor(Cursor.WAIT_CURSOR);
            setCursor(hourglassCursor);

            Connection conn = Db_class.mysql_conn();
            if (piEdicao == 0) {
                sSQL.delete(0, sSQL.length());
                sSQL.append("insert into ouvidoria.cidades_novo ");
                sSQL.append("(sigla, cidade_qualinet, ci_depara, cop, regional, cluster, sistema, cop_info) ");
                sSQL.append("select ");
                sSQL.append("'").append(s_mr).append("' as sigla, ");
                sSQL.append("'").append(s_mr).append("' as cidade_qualinet, ");
                sSQL.append("'").append(s_mr).append("' as cid_depara, ");
                sSQL.append("'").append(s_tipo).append("' as cop, ");
                sSQL.append("'Sem Regional' as regional, ");
                sSQL.append("'Sem Cluster' as cluster, ");
                sSQL.append("'").append(s_sistema).append("' as sistema, ");
                sSQL.append("'").append(s_mr).append("' as cop_info ");
                sSQL.append("from dual ");
                sSQL.append("where not exists ");
                sSQL.append("( ");
                sSQL.append("select distinct ci_depara ");
                sSQL.append("from ouvidoria.cidades_novo ");
                sSQL.append("where trim(upper(ci_depara)) = trim(upper('").append(s_mr).append("')) ");
                sSQL.append(") ");
                sSQL.append("; ");

                Db_class.mysql_insert(sSQL.toString(), conn);

                //log - inicio
                sSQL_Log.delete(0, sSQL_Log.length());
                sSQL_Log.append("insert into tb_log (login, dt_registro, comando) ");
                sSQL_Log.append("select ");
                sSQL_Log.append("'").append(System.getProperty("user.name")).append("', ");
                sSQL_Log.append("now(), ");
                sSQL_Log.append("trim( ");
                sSQL_Log.append("substr( ");
                sSQL_Log.append("'").append(sSQL.toString().replaceAll("'", "")).append("' ");
                sSQL_Log.append(", 1, 1000) ");
                sSQL_Log.append(") ");
                sSQL_Log.append("; ");

                Db_class.mysql_insert(sSQL_Log.toString(), conn);
                //log - final

                //se a inclusão for bem sucedida, desabilita os campos abaixo
                piEdicao = 1; //caso ocorra erro na fase de AREAS DE DESPACHO, não volta a incluir MR
                jtxt_mr_nova.setEditable(false);
                jcb_tipo_cop.setEnabled(false);
                jcb_sistema.setEnabled(false);
                //
            }

            for (int i = 0; i <= main_tab.getModel().getRowCount() - 1; i++) {
                s_area_id = main_tab.getValueAt(i, 0).toString();
                s_area_atual = main_tab.getValueAt(i, 1).toString();
                s_area = main_tab.getValueAt(i, 2).toString();
                s_acao = main_tab.getValueAt(i, 3).toString();

                s_resultado_area = "";
                sSQL.delete(0, sSQL.length());
                if (main_tab.getValueAt(i, 3) == "Excluir") {
                    sSQL.append("delete from ouvidoria.areas_novo ");
                    sSQL.append("where trim(upper(cidade)) = trim(upper('").append(s_mr).append("')) ");
                    sSQL.append("and trim(upper(area)) = trim(upper('").append(s_area_atual).append("')) ");
                    sSQL.append("and id = ").append(s_area_id).append(" ");
                    sSQL.append("; ");

                    s_resultado_area = "Excluido";
                } else {
                    if (main_tab.getValueAt(i, 3) == "Incluir") {
                        sSQL.append("insert into ouvidoria.areas_novo (cidade, area) ");
                        sSQL.append("select '").append(s_mr).append("' as cidade, '").append(s_area).append("' as area ");
                        sSQL.append("from dual ");
                        sSQL.append("where not exists ");
                        sSQL.append("( ");
                        sSQL.append("select distinct area ");
                        sSQL.append("from ouvidoria.areas_novo ");
                        sSQL.append("where trim(upper(cidade)) = trim(upper('").append(s_mr).append("')) ");
                        sSQL.append("and trim(upper(area)) = trim(upper('").append(s_area).append("')) ");
                        sSQL.append(") ");
                        sSQL.append("; ");

                        s_resultado_area = "Incluído";
                    } else {
                        if (main_tab.getValueAt(i, 3) == "Renomear") {
                            sSQL.append("update ouvidoria.areas_novo ");
                            sSQL.append("set area = '").append(s_area).append("' ");
                            sSQL.append("where trim(upper(cidade)) = trim(upper('").append(s_mr).append("')) ");
                            sSQL.append("and trim(upper(area)) = trim(upper('").append(s_area_atual).append("')) ");
                            sSQL.append("and id = ").append(s_area_id).append(" ");
                            sSQL.append("; ");

                            s_resultado_area = "Renomeado";
                        }
                    }
                }
                //executando a operação
                if (sSQL.length() > 0) {
                    Db_class.mysql_insert(sSQL.toString(), conn);
                    if (!"".equals(s_resultado_area)) {
                        main_tab.setValueAt(s_resultado_area, i, 3);
                        main_tab.setValueAt(s_area, i, 1);
                    }
                    //log - inicio
                    sSQL_Log.delete(0, sSQL_Log.length());
                    sSQL_Log.append("insert into tb_log (login, dt_registro, comando) ");
                    sSQL_Log.append("select ");
                    sSQL_Log.append("'").append(System.getProperty("user.name")).append("', ");
                    sSQL_Log.append("now(), ");
                    sSQL_Log.append("trim( ");
                    sSQL_Log.append("substr( ");
                    sSQL_Log.append("'").append(sSQL.toString().replaceAll("'", "")).append("' ");
                    sSQL_Log.append(", 1, 1000) ");
                    sSQL_Log.append(") ");
                    sSQL_Log.append("; ");

                    Db_class.mysql_insert(sSQL_Log.toString(), conn);
                    //log - final

                }
            }
            Db_class.close_conn(conn);

            Cursor normalCursor = new Cursor(Cursor.DEFAULT_CURSOR);
            setCursor(normalCursor);

            global.show_message("Informações gravadas.\n\nNa janela anterior, execute uma nova consulta para\nver o resultado.");
            this.dispose();
            //atualizações - final
        } catch (Exception ex) {
            Cursor normalCursor = new Cursor(Cursor.DEFAULT_CURSOR);
            setCursor(normalCursor);
            global.show_error_message("Problemas para gravar as informações\n\nErro: " + ex.getMessage());
        }

    }//GEN-LAST:event_jbt_salvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dth_mr_editar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dth_mr_editar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dth_mr_editar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dth_mr_editar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        final Integer iEdicao = Integer.parseInt(args[0]);
        final String sCOP = args[1];
        final String sTipo = args[2];
        final String sSistema = args[3];

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dth_mr_editar(iEdicao, sCOP, sTipo, sSistema).setVisible(true);
                //new dth_mr_editar().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbt_cancelar;
    private javax.swing.JButton jbt_excluir;
    private javax.swing.JButton jbt_inc_alt;
    private javax.swing.JButton jbt_renomear;
    private javax.swing.JButton jbt_salvar;
    private javax.swing.JButton jbt_sem_acao;
    private javax.swing.JComboBox jcb_sistema;
    private javax.swing.JComboBox jcb_tipo_cop;
    private javax.swing.JPanel jpnl_planilha;
    private javax.swing.JTextField jtxt_area;
    private javax.swing.JTextField jtxt_mr_nova;
    // End of variables declaration//GEN-END:variables
}
