/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ouvidoria;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;

/**
 *
 * @author N0026925
 */
public class divisao_cidades_user extends javax.swing.JPanel {

    Menu mn;
    JTable left_tab;
    JTable right_tab;
    int[] current_right_rows;
    int[] current_left_rows;
    String user;
    String turno;
    String tipo_os;
    String field_name;

    /**
     * Creates new form divisao_cidades_user
     */
    public divisao_cidades_user(String user, Menu mn, String field_name) {
        initComponents();

        this.mn = mn;
        this.user = user;

        this.field_name = field_name;

        atualiza();

    }

    public void atualiza() {

        if (!user.equals("")) {

            left.removeAll();
            right.removeAll();

            String query_others = "SELECT ifnull(ci_depara,'') as Cidade, "
                    + "ifnull(" + field_name + ",'') as 'Operador Resp' "
                    + "FROM cidades_novo "
                    + "WHERE cop = 'COP NET' "
                    + "and (" + field_name + " != '" + user + "' or " + field_name + " is null) "
                    + "ORDER BY ci_depara";
            try {
                left_tab = global.getTable(query_others, left);
            } catch (Exception ex) {
                Logger.getLogger(divisao_cidades_user.class.getName()).log(Level.SEVERE, null, ex);
            }

            String query_user = "SELECT ifnull(ci_depara,'') as 'Cidades atendidas por " + user + "' "
                    + "FROM cidades_novo "
                    + "WHERE cop = 'COP NET' "
                    + "and (" + field_name + " = '" + user + "') "
                    + "ORDER BY ci_depara";
            try {
                right_tab = global.getTable(query_user, right);
            } catch (Exception ex) {
                Logger.getLogger(divisao_cidades_user.class.getName()).log(Level.SEVERE, null, ex);
            }

            left.repaint();
            left.revalidate();
            right.repaint();
            right.revalidate();

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        left = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        right = new javax.swing.JPanel();
        center_panel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        left.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        left.setMaximumSize(new java.awt.Dimension(300, 2147483647));
        left.setPreferredSize(new java.awt.Dimension(400, 4));
        left.setLayout(new java.awt.BorderLayout());
        add(left, java.awt.BorderLayout.WEST);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        jPanel1.setLayout(new java.awt.BorderLayout());

        right.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        right.setMaximumSize(new java.awt.Dimension(300, 2147483647));
        right.setPreferredSize(new java.awt.Dimension(300, 4));
        right.setLayout(new java.awt.BorderLayout());
        jPanel1.add(right, java.awt.BorderLayout.CENTER);

        center_panel.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        center_panel.setPreferredSize(new java.awt.Dimension(200, 779));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setText("<<<<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText(">>>>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("<<<<<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText(">>>>>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout center_panelLayout = new javax.swing.GroupLayout(center_panel);
        center_panel.setLayout(center_panelLayout);
        center_panelLayout.setHorizontalGroup(
            center_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(center_panelLayout.createSequentialGroup()
                .addGroup(center_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(center_panelLayout.createSequentialGroup()
                        .addGap(432, 432, 432)
                        .addGroup(center_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jButton1)))
                    .addGroup(center_panelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(center_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4)
                            .addComponent(jButton3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        center_panelLayout.setVerticalGroup(
            center_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(center_panelLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(419, 419, 419)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(center_panel, java.awt.BorderLayout.LINE_START);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        remove_cidades();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        add_cidades();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        add_cidades();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        remove_cidades();

    }//GEN-LAST:event_jButton3ActionPerformed

    public void add_cidades() {

        String cidades = "";
        String sql_cidades = "";

        int cont = 0;

        current_left_rows = left_tab.getSelectedRows();

        if (current_left_rows.length == 0) {

            global.show_error_message("Selecione pelo menos uma cidade para adicionar!");
            return;

        }

        for (int id : current_left_rows) {

            cidades = cidades + "\n" + left_tab.getValueAt(id, 0);

            if (cont == 0) {

                sql_cidades = "'" + left_tab.getValueAt(id, 0) + "'";

            } else {

                sql_cidades = sql_cidades + ", " + "'" + left_tab.getValueAt(id, 0) + "'";

            }

            cont++;

        }

        int result = global.dialog_question("Deseja atribuir as cidades abaixo para " + user + "?\n" + cidades);

        if (result != 0) {

            return;

        }
        try {
            Connection conn = Db_class.mysql_conn();

            String query = "UPDATE cidades_novo SET " + field_name + " = '" + user + "' "
                    + "WHERE ci_depara IN (" + sql_cidades + ")";

            Db_class.mysql_insert(query, conn);

            Db_class.close_conn(conn);

            global.show_message("Cidades atribu√≠das com sucesso!");

            atualiza();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(divisao_operador.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void remove_cidades() {

        String cidades = "";
        String sql_cidades = "";

        int cont = 0;

        current_right_rows = right_tab.getSelectedRows();

        if (current_right_rows.length == 0) {

            global.show_error_message("Selecione pelo menos uma cidade para remover!");
            return;

        }

        for (int id : current_right_rows) {

            cidades = cidades + "\n" + right_tab.getValueAt(id, 0);

            if (cont == 0) {

                sql_cidades = "'" + right_tab.getValueAt(id, 0) + "'";

            } else {

                sql_cidades = sql_cidades + ", " + "'" + right_tab.getValueAt(id, 0) + "'";

            }

            cont++;

        }

        int result = global.dialog_question("Deseja remover as cidades abaixo do usu√°rio " + user + "?\n" + cidades);

        if (result != 0) {

            return;

        }
        try {
            Connection conn = Db_class.mysql_conn();

            String query = "UPDATE cidades_novo SET " + field_name + " = null "
                    + "WHERE ci_depara IN (" + sql_cidades + ")";

            Db_class.mysql_insert(query, conn);

            Db_class.close_conn(conn);

            global.show_message("Cidades removidas com sucesso!");

            atualiza();

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(divisao_operador.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel center_panel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel left;
    private javax.swing.JPanel right;
    // End of variables declaration//GEN-END:variables
}
